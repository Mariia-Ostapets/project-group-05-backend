{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water Tracker App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Water Tracker App"
  },
  "servers": [
    {
      "url": "https://project-group-05-backend.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations"
    },
    {
      "name": "User",
      "description": "Operations with User data"
    },
    {
      "name": "Water",
      "description": "Water consumption tracking operations"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "SignUp User",
        "operationId": "SignUp",
        "description": "SignUp User with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456asd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register as a new user. User data is written to the database with unique _id. The server returns nothing in response. A registered user needs to go through the login procedure in the app."
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Email is required. Email should be in format example@mail.com. Password is required. Password should be at least 8 characters. Password should be at most 64 characters."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "description": "Conflict Error. The request conflicts with the current state of the server.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email in use."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "SignIn User",
        "operationId": "SignIn",
        "description": "SignIn User with email and password.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456asd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful. The server returns the user object and token.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "user",
                    "token"
                  ],
                  "properties": {
                    "user": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "avatar",
                        "gender",
                        "dailyNorm"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "679f770240e2b0ff4b442974"
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@mail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dtfo6b7gi/image/upload/v1738226311/tzsd56ad…"
                        },
                        "gender": {
                          "type": "string",
                          "example": "female"
                        },
                        "dailyNorm": {
                          "type": "number",
                          "example": 1500
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWIzNTQwNDhlNTBkNzQwZWZhNzY4NCIsImlhdCI6MTczODQ5NjI2NX0.W5OVo5431woG8wIvNauHKa9Gn8kC1Q-0GByzG67x6hA"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error. The request is unauthenticated.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Email or password are wrong."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout User",
        "operationId": "logout",
        "description": "Logout User from account. Requires authentication. Token is deleted from the database.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout from account. No content in the response body"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User data",
        "operationId": "Current",
        "description": "Get all User data. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get all User data",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name",
                    "email",
                    "gender",
                    "dailyNorm",
                    "avatar"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@mail.com"
                    },
                    "gender": {
                      "type": "string",
                      "example": "female"
                    },
                    "dailyNorm": {
                      "type": "number",
                      "example": "1500"
                    },
                    "avatar": {
                      "type": "string",
                      "example": "https://res.cloudinary.com/dtfo6b7gi/image/upload/v1738226311/tzsd56ad…"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update User's Data",
        "operationId": "updateUSer",
        "description": "Partially or fully update the User data. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456asd",
                    "description": "Current password required for password change"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "newSecureP@ss123",
                    "description": "New password to replace the old one"
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "dailyNorm": {
                    "type": "number",
                    "example": 1500
                  },
                  "avatar": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://res.cloudinary.com/dtfo6b7gi/image/upload/v1738226311/tzsd56ad…"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful. The server has responded as required. The server returns an object with updated user data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update info!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "gender",
                        "dailyNorm",
                        "avatar"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "679f770240e2b0ff4b442974"
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@mail.com"
                        },
                        "gender": {
                          "type": "string",
                          "example": "male"
                        },
                        "dailyNorm": {
                          "type": "number",
                          "example": 1500
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dtfo6b7gi/image/upload/v1738226311/tzsd56ad…"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Email should be in format example@mail.com. Password should be at least 8 characters. Password should be at most 64 characters. Name should be at most 32 characters. Gender must be either \"male\" or \"female\". Daily norma should be at least 1. Daily norma should be at most 15000."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "description": "Conflict Error. The request conflicts with the current state of the server.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email in use."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "Backend-generated unique identifier.",
            "type": "string",
            "example": "679e59ee76bc89b649731a32"
          },
          "name": {
            "description": "User`s name. Should be at most 32 characters",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User`s email. Is required. Should be in format example@mail.com",
            "type": "string",
            "example": "example@mail.com"
          },
          "password": {
            "description": "User`s password. Is required. Should be at least 8 and at most 64 characters",
            "type": "string",
            "example": "123456asd"
          },
          "gender": {
            "description": "User`s gender. Should be one of the suggested values",
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "example": "female"
          },
          "dailyNorm": {
            "description": "User`s daily norm of water. Should be at most 15000 ml. Default value is 1500 ml",
            "type": "number",
            "example": 1500
          },
          "avatar": {
            "description": "User`s avatar",
            "type": "string",
            "example": "https://res.cloudinary.com/dtfo6b7gi/image/upload/v1738226311/tzsd56ad…"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error. The request is unauthenticated.",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Not authorizated. Please provide Authorization header. Auth header should be of type Bearer."
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error. Requested resource could not be found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Route not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Server Error. Something went wrong"
                }
              }
            }
          }
        }
      }
    }
  }
}