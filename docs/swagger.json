{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water Tracker App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Water Tracker App"
  },
  "servers": [
    {
      "url": "https://project-group-05-backend.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations"
    },
    {
      "name": "User",
      "description": "Operations with User data"
    },
    {
      "name": "Water",
      "description": "Water consumption tracking operations"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "SignUp User",
        "operationId": "SignUp",
        "description": "SignUp User with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "ladygaga@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register as a new User. User data is written to the database with unique _id. The server returns nothing in response. A registered User needs to go through the login procedure in the app."
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Email is required. Email should be in format example@mail.com. Password is required. Password should be at least 8 characters. Password should be at most 64 characters."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "description": "Conflict Error. The request conflicts with the current state of the server.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email in use."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "SignIn User",
        "operationId": "SignIn",
        "description": "SignIn User with email and password.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "ladygaga@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful. The server returns the User object and token.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "user",
                    "token"
                  ],
                  "properties": {
                    "user": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "avatar",
                        "gender",
                        "dailyNorm"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "67a210a28f7f42ba355eb221"
                        },
                        "name": {
                          "type": "string",
                          "example": "Lady Gaga"
                        },
                        "email": {
                          "type": "string",
                          "example": "ladygaga@gmail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dhfwc4nmz/image/upload/v1738667492/ysf70wtw63hihtf14spo.avif"
                        },
                        "gender": {
                          "type": "string",
                          "example": "female"
                        },
                        "dailyNorm": {
                          "type": "number",
                          "example": 1500
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWIzNTQwNDhlNTBkNzQwZWZhNzY4NCIsImlhdCI6MTczODQ5NjI2NX0.W5OVo5431woG8wIvNauHKa9Gn8kC1Q-0GByzG67x6hA"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error. The request is unauthenticated.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Email or password are wrong."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout User",
        "operationId": "logout",
        "description": "Logout User from account. Requires authentication. Token is deleted from the database.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout from account. No content in the response body."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User data",
        "operationId": "Current",
        "description": "Get all User data. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get all User data",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name",
                    "email",
                    "gender",
                    "dailyNorm",
                    "avatar"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Lady Gaga"
                    },
                    "email": {
                      "type": "string",
                      "example": "ladygaga@mail.com"
                    },
                    "gender": {
                      "type": "string",
                      "example": "female"
                    },
                    "dailyNorm": {
                      "type": "number",
                      "example": "1500"
                    },
                    "avatar": {
                      "type": "string",
                      "example": "https://res.cloudinary.com/dhfwc4nmz/image/upload/v1738667492/ysf70wtw63hihtf14spo.avif"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update User's Data",
        "operationId": "updateUser",
        "description": "Partially or fully update the User data. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "ladygaga@gmail.com",
                    "description": "User`s email. Should be in format example@mail.com."
                  },
                  "password": {
                    "type": "string",
                    "example": "1234567890",
                    "description": "Current password required for password change."
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "0987654321",
                    "description": "New password to replace the old one."
                  },
                  "name": {
                    "type": "string",
                    "example": "Lady Gaga",
                    "description": "User`s name. Should be at most 32 characters."
                  },
                  "gender": {
                    "type": "string",
                    "example": "female",
                    "description": "User`s gender. Should be be one of the suggested values female or male. Default value is female."
                  },
                  "dailyNorm": {
                    "type": "number",
                    "example": 1500,
                    "description": "User`s daily norm of water. Should be at most 15000 ml. Default value is 1500 ml."
                  },
                  "avatar": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://res.cloudinary.com/dhfwc4nmz/image/upload/v1738667492/ysf70wtw63hihtf14spo.avif",
                    "description": "User`s avatar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful. The server has responded as required. The server returns an object with updated User data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update info!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "gender",
                        "dailyNorm",
                        "avatar"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "67a210a28f7f42ba355eb221"
                        },
                        "name": {
                          "type": "string",
                          "example": "Lady Gaga"
                        },
                        "email": {
                          "type": "string",
                          "example": "ladygaga@gmail.com"
                        },
                        "gender": {
                          "type": "string",
                          "example": "female"
                        },
                        "dailyNorm": {
                          "type": "number",
                          "example": 1500
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dhfwc4nmz/image/upload/v1738667492/ysf70wtw63hihtf14spo.avif"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Email should be in format example@mail.com. Password should be at least 8 characters. Password should be at most 64 characters. Name should be at most 32 characters. Gender must be either \"male\" or \"female\". Daily norma should be at least 1. Daily norma should be at most 15000."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "description": "Conflict Error. The request conflicts with the current state of the server.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email in use."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/update-water-rate": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update User's Water Rate",
        "operationId": "updateUserWaterRate",
        "description": "Update only User daily norm of water. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dailyNorm": {
                    "type": "number",
                    "example": 2000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful. The server has responded as required. The server returns an object with updated user data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update info!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "gender",
                        "dailyNorm",
                        "avatar"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "67a210a28f7f42ba355eb221"
                        },
                        "name": {
                          "type": "string",
                          "example": "Lady Gaga"
                        },
                        "email": {
                          "type": "string",
                          "example": "ladygaga@gmail.com"
                        },
                        "gender": {
                          "type": "string",
                          "example": "female"
                        },
                        "dailyNorm": {
                          "type": "number",
                          "example": 2000
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dhfwc4nmz/image/upload/v1738667492/ysf70wtw63hihtf14spo.avif"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Daily norma should be at least 1. Daily norma should be at most 15000."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add a portion of water",
        "operationId": "addWater",
        "description": "Add a portion of water by User. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId",
                  "date",
                  "entries"
                ],
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "67a210a28f7f42ba355eb221",
                    "description": "User Id"
                  },
                  "date": {
                    "type": "string",
                    "example": "2025-02-04",
                    "description": "Date of addition of water portion in format YYYY-MM-DD"
                  },
                  "entries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "time",
                        "waterVolume"
                      ],
                      "properties": {
                        "time": {
                          "type": "string",
                          "example": "2024-02-04T15:00",
                          "description": "Water consumption time in format YYYY-MM-DDTHH:mm"
                        },
                        "waterVolume": {
                          "type": "number",
                          "example": 400,
                          "description": "Volume of water drunk in milliliters"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully Created. A portion of water has been added to database. The server returns an object with updated water data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "67a211838f7f42ba355eb247"
                    },
                    "date": {
                      "type": "string",
                      "example": "2025-02-04"
                    },
                    "userId": {
                      "type": "string",
                      "example": "67a210a28f7f42ba355eb221"
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "example": "2024-02-04T15:00"
                          },
                          "waterVolume": {
                            "type": "number",
                            "example": 400
                          },
                          "_id": {
                            "type": "number",
                            "example": "67a211b08f7f42ba355eb253"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "userId is required. Date is required. Date must be in format YYYY-MM-DD. Date and entries array are required. Each entry must have time and waterVolume. Time is required. Time must be in format YYYY-MM-DDTHH:mm. WaterVolume is required. WaterVolume must contain at least 1 ml. WaterVolume must contain no more than 5000 ml."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/today/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water by day",
        "operationId": "getWaterByDay",
        "description": "Get all portions of water by specific day. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2025-02-04"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The server returns the object with waterRecord.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "waterRecord": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "67a0d52a242782f7fdb53809"
                        },
                        "date": {
                          "type": "string",
                          "example": "2025-02-04"
                        },
                        "userId": {
                          "type": "string",
                          "example": "67a210a28f7f42ba355eb221"
                        },
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "example": "2025-02-04T16:00"
                              },
                              "waterVolume": {
                                "type": "number",
                                "example": 300
                              },
                              "_id": {
                                "type": "number",
                                "example": "67a211b08f7f42ba355eb253"
                              }
                            }
                          }
                        }
                      }
                    },
                    "totalWater": {
                      "type": "number",
                      "example": 300
                    },
                    "percentage": {
                      "type": "string",
                      "example": "20%"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Date is required. Valid dailyNorm is required."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error. Requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "No water entries found for this date. Route not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{year}/{month}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water by month",
        "operationId": "getWaterByMonth",
        "description": "Get all portions of water by specific month and year. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2025"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "string",
              "example": "02"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The server returns the array of the objects with statistic informaion about specific month. Every day of month is single object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "example": "4, February"
                      },
                      "dailyNorma": {
                        "type": "string",
                        "example": "1.5 L"
                      },
                      "percentage": {
                        "type": "string",
                        "example": "20%"
                      },
                      "entryCount": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Year and month are required. Valid dailyNorm is required."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error. Requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "No water entries found for this month. Route not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{entryId}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update water",
        "operationId": "updateWaterByDay",
        "description": "Update portion of water by entryId of specific portion of water. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entryId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a211b08f7f42ba355eb253"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "newTime",
                  "waterVolume"
                ],
                "properties": {
                  "newTime": {
                    "type": "string",
                    "example": "2025-02-04T16:00",
                    "description": "Time in the format YYYY-MM-DDTHH:mm at which the User changes the waterVolume record."
                  },
                  "waterVolume": {
                    "type": "number",
                    "example": 300,
                    "description": "Volume of a portion of water in milliliters"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful. A portion of water has been changed. The server returns an object with updated water data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "67a211838f7f42ba355eb247"
                    },
                    "date": {
                      "type": "string",
                      "example": "2025-02-04"
                    },
                    "userId": {
                      "type": "string",
                      "example": "67a210a28f7f42ba355eb221"
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "example": "2025-02-04T16:00"
                          },
                          "waterVolume": {
                            "type": "number",
                            "example": 300
                          },
                          "_id": {
                            "type": "number",
                            "example": "67a211b08f7f42ba355eb253"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "EntryId, newTime, and waterVolume are required. Time must be in format YYYY-MM-DDTHH:mm. WaterVolume must be at least 1 ml. WaterVolume cannot exceed 5000 ml."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error. Requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Water entry not found. Route not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water",
        "operationId": "deleteWater",
        "description": "Delete portion of water by entryId of specific portion of water. Requires authentication.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entryId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a211b08f7f42ba355eb253"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. A portion of water has been deleted. The server returns an object with updated water data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water entry deleted successfully!"
                    },
                    "updatedWaterRecord": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "67a202229c65c88f8e73f8cf"
                        },
                        "date": {
                          "type": "string",
                          "example": "2025-02-04"
                        },
                        "userId": {
                          "type": "string",
                          "example": "67a210a28f7f42ba355eb221"
                        },
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "example": "2025-02-04T14:00"
                              },
                              "waterVolume": {
                                "type": "number",
                                "example": 250
                              },
                              "_id": {
                                "type": "number",
                                "example": "67a202229c65c88f8e73f8d0"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Entry ID is required."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error. Requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Water entry not found. Route not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "Backend-generated unique identifier.",
            "type": "string",
            "example": "67a210a28f7f42ba355eb221"
          },
          "name": {
            "description": "User`s name. Should be at most 32 characters",
            "type": "string",
            "example": "Lady Gaga"
          },
          "email": {
            "description": "User`s email. Is required. Should be in format example@mail.com.",
            "type": "string",
            "example": "ladygaga@mail.com"
          },
          "password": {
            "description": "User`s password. Is required. Should be at least 8 and at most 64 characters.",
            "type": "string",
            "example": "1234567890"
          },
          "gender": {
            "description": "User`s gender. Should be one of the suggested values.",
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "example": "female"
          },
          "dailyNorm": {
            "description": "User`s daily norm of water. Should be at most 15000 ml. Default value is 1500 ml.",
            "type": "number",
            "example": 1500
          },
          "avatar": {
            "description": "User`s avatar",
            "type": "string",
            "example": "https://res.cloudinary.com/dhfwc4nmz/image/upload/v1738667492/ysf70wtw63hihtf14spo.avif"
          }
        }
      },
      "Water": {
        "type": "object",
        "required": [
          "date",
          "userId",
          "entries"
        ],
        "properties": {
          "date": {
            "description": "Recording date in format YYYY-MM-DD.",
            "type": "string",
            "example": "2024-02-04"
          },
          "userId": {
            "description": "The ID of the User who created the entry.",
            "type": "string",
            "example": "67a210a28f7f42ba355eb221"
          },
          "entries": {
            "description": "Array of records about water consumption, consists of time in format YYYY-MM-DDTHH:mm and waterVolume.",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "time",
                "waterVolume"
              ],
              "properties": {
                "time": {
                  "description": "Water consumption time in format YYYY-MM-DDTHH:mm.",
                  "type": "string",
                  "example": "2024-02-04T15:30"
                },
                "waterVolume": {
                  "description": "Volume of water drunk in milliliters.",
                  "type": "number",
                  "example": 250
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error. The request is unauthenticated.",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Not authorizated. Please provide Authorization header. Auth header should be of type Bearer."
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error. Requested resource could not be found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Route not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Server Error. Something went wrong."
                }
              }
            }
          }
        }
      }
    }
  }
}